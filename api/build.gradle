plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

group = 'com.eleks.academy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

sonarqube {
    properties {
        property "sonar.projectKey", "FedenkoMykhailo_pharmagator"
        property "sonar.tests", "src/test"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco.xml"
        property "sonar.junit.reportsPath", "build/test-results/*/TEST-*.xml"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.postgresql:postgresql:42.2.24'
    implementation 'org.flywaydb:flyway-core:7.15.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.dbunit:dbunit:2.7.2'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled(true)
        csv.enabled(false)
        html.enabled(true)
        //to create coverage report in html
        html.destination file("${buildDir}/reports/coverage")
        //for XML
        xml.destination file("${buildDir}/reports/jacoco.xml")
    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled(false)
            limit {
                minimum = 0.5
            }
        }
    }
}
